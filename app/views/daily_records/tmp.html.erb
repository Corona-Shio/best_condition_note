<%# 20241117 開始 %>

<div class="chart-container">
  <div class="scrollableChartWrapper">
    <canvas id="chart"></canvas>
  </div>
  <div class="fixed-legend">
      <div>SLEEP</div>
      <div>MEAL</div>
      <div>MENTAL</div>
      <div>TRAINING</div>
      <div>CONDITION</div>
  </div>
</div>

<script>
    document.addEventListener('turbo:load', function() {
        
        // 既存のチャートを破棄
        if (window.myChart) {
            window.myChart.destroy();
        }

        var ctx = document.getElementById('chart');

        // var scoresData = <%= raw @scores.to_json %>;
        // var dates     = scoresData.sleep.map(item => item[0]);
        // var sleeps     = scoresData.sleep.map(item => item[1]);
        // var meals      = scoresData.meal.map(item => item[1]);
        // var mentals    = scoresData.mental.map(item => item[1]);
        // var trainings  = scoresData.training.map(item => item[1]);
        // var conditions = scoresData.condition.map(item => item[1]);
        var dates      = <%= @date.to_json.html_safe %>;
        var sleeps     = <%= @sleep.to_json.html_safe %>;
        var meals      = <%= @meal.to_json.html_safe %>;
        var mentals    = <%= @mental.to_json.html_safe %>;
        var trainings  = <%= @training.to_json.html_safe %>;
        var conditions = <%= @condition.to_json.html_safe %>;
        

        var xAxisLabelMinWidth = 30; // データ当たりの幅を設定
        // var width = scoresData.sleep.length * xAxisLabelMinWidth; // グラフ全体の幅を計算
        var width = dates.length * xAxisLabelMinWidth; // グラフ全体の幅を計算

        if (width < 1100) {
            ctx.style.width = "100%";
        } else {
            ctx.style.width = width + "px";
        }
        ctx.style.height = "700px"; //htmlと同じ高さを設定

        var myChart = new Chart(ctx.getContext('2d'), {
            type: 'line',
            data: {
                labels: dates,
                datasets: [
                    {
                        label: 'SLEEP',
                        data: sleeps,
                        // borderColor: 'blue',
                        // tension: 0.1
                    },
                    {
                        label: 'MEAL',
                        data: meals,
                        // borderColor: 'green',
                        // tension: 0.1
                    },
                    {
                        label: 'MENTAL',
                        data: mentals,
                        // borderColor: 'red',
                        // tension: 0.1
                    },
                    {
                        label: 'TRAINING',
                        data: trainings,
                        // borderColor: 'purple',
                        // tension: 0.1
                    },
                    {
                        label: 'CONDITION',
                        data: conditions,
                        // borderColor: 'orange',
                        // tension: 0.1
                    }
                ]
            },
            options: {
                responsive: false,
                plugins: {
                    title: {
                        display: false,
                    },
                    legend: {
                        display: false,
                        position: 'left',
                    },
                    tooltip: {
                        enabled: false
                    }
                },
                scales: {
                    x: {
                        display: true,
                        type: 'time',
                        time: {
                            unit: 'day',
                            displayFormats: {
                                day: 'MM/dd'
                            }
                        },
                        grid: {
                            color: "rgba(0,0,255,0.03)",
                            lineWidth: 1,
                        },
                        ticks: {
                            maxRotation: 0
                        }
                    },
                    y: {
                        display: true,
                        beginAtZero: true,
                        ticks: {
                            display: false,
                            stepSize: 3,
                            maxTicksLimit: 20
                        },
                        grid: {
                            color: "rgba(0,0,255,0.1)",
                            lineWidth: 1,
                        }
                    },
                    }
                },
            });
        // スクロールバーを右端にする
        setTimeout(() => {
            const scrollableWrappers = document.querySelectorAll('.scrollableChartWrapper');

            scrollableWrappers.forEach(wrapper => {
                wrapper.scrollLeft = wrapper.scrollWidth;
            });
        }, 100);
    });
    // 同時スクロール
    document.addEventListener('DOMContentLoaded', () => {
        const scrollableElements = document.querySelectorAll('.scrollableChartWrapper');
        
        // 最初の要素をマスター要素として使用
        const masterElement = scrollableElements[0];
        
        masterElement.addEventListener('scroll', () => {
            const scrollLeft = masterElement.scrollLeft;
            
            scrollableElements.forEach(element => {
            if (element !== masterElement) {
                element.scrollLeft = scrollLeft;
            }
            });
        });
    });
    
</script>

<%# 20241117 終了 %>











<%# 20241109 開始 %>

<h1>Condition Chart</h1>
<h1>１グラフ</h1>

<%= line_chart [
      { name: "Sleep",     data: @scores2[:sleep] },
      { name: "Meal",      data: @scores2[:meal] },
      { name: "Mental",    data: @scores2[:mental] },
      { name: "Training",  data: @scores2[:training] },
      { name: "Condition", data: @scores2[:condition] }
    ],
    height: "700px",
    # xtitle: "Date",
    # ytitle: "Score",
    min: 0,
    max: 30,
    library: {
      scales: {
        x: {
          display: true,
          type: 'time',
          time: {
            displayFormats: {
              day: 'MM/dd'
            }
          }
        },
        y: {
          ticks: {
            display: false,
            stepSize: 3,
            maxTicksLimit: 20
          },
          grid: {
            color: "rgba(0,0,255,0.1)",
            lineWidth: 1,
          }
        },
      },
    }
%>


<h1>５グラフ</h1>
<%= line_chart @scores[:sleep],     ytitle: "SLEEP"    %>
<%= line_chart @scores[:meal],      ytitle: "MEAL"     %>
<%= line_chart @scores[:mental],    ytitle: "MENTAL"   %>
<%= line_chart @scores[:training],  ytitle: "TRAINING" %>
<%= line_chart @scores[:condition], ytitle: "CONDITION",
  # width: "#{@scores[:condition].count * 30}px", # 可変width
  height: "160px",
  library: {
    scales: {
      x: {
        display: true,
        type: 'time',
        time: {
          displayFormats: { day: 'MM/dd' }
        }
      }
    }
  }
%>

<%# 20241109 終了 %>

<%# app/views/daily_records/index.html.erb %>
<div class="period-selector">
  <%= link_to '今月', daily_records_path(period: 'this_month', view_type: @view_type), 
              class: "btn #{@period == 'this_month' ? 'btn-primary' : 'btn-secondary'}" %>
  <%= link_to '直近1ヶ月', daily_records_path(period: 'month', view_type: @view_type), 
              class: "btn #{@period == 'month' ? 'btn-primary' : 'btn-secondary'}" %>
  <%= link_to '3ヶ月', daily_records_path(period: 'three_months', view_type: @view_type), 
              class: "btn #{@period == 'three_months' ? 'btn-primary' : 'btn-secondary'}" %>
</div>

<div class="view-type-selector">
  <%= link_to '日別', daily_records_path(period: @period, view_type: 'daily'), 
              class: "btn #{@view_type == 'daily' ? 'btn-primary' : 'btn-secondary'}" %>
  <%= link_to '週平均', daily_records_path(period: @period, view_type: 'weekly'), 
              class: "btn #{@view_type == 'weekly' ? 'btn-primary' : 'btn-secondary'}" %>
</div>

<%= line_chart @scores[:date].map { |k, v| [k.strftime("%m/%d"), v] },
    ytitle: "SLEEP",
    min: 0,
    max: 6,
    library: {
      scales: {
        
        y: { stepSize: 1, ticks: { display: false } }
      }
    }
%>









<h1>Condition Chart</h1>

<%= form_with url: daily_records_path, method: :get, local: true do |f| %>
  <div class="date-filter row align-items-end">
    <div class="col-md-5">
      <%= f.label :start_date, "Start Date" %>
      <%= f.date_field :start_date, value: params[:start_date], class: "form-control" %>
    </div>

    <div class="col-md-5">
      <%= f.label :end_date, "End Date" %>
      <%= f.date_field :end_date, value: params[:end_date], class: "form-control" %>
    </div>

    <div class="col-md-2">
      <%= f.submit "Filter", class: "btn btn-primary w-100" %>
    </div>
  </div>
<% end %>


<%= line_chart @sleep_scores,      ytitle: "SLEEP",     min: 0, max: 6, library: { scales: { x: { display: false }, y: { stepSize: 1, ticks: { display: false } } } } %>
<%= line_chart @meal_scores,       ytitle: "MEAL",      min: 0, max: 6, library: { scales: { x: { display: false }, y: { ticks: { display: false } } } } %>
<%= line_chart @mental_scores,     ytitle: "MENTAL",    min: 0, max: 6, library: { scales: { x: { display: false }, y: { ticks: { display: false } } } } %>
<%= line_chart @training_scores,   ytitle: "TRAINING",  min: 0, max: 6, library: { scales: { x: { display: false }, y: { ticks: { display: false } } } } %>
<%= line_chart @condition_scores.map { |k, v| [k.strftime("%m/%d"), v] },
  height: "190px", ytitle: "CONDITION", min: 0, max: 6, library: { scales: { y: { ticks: { display: false } } } } %>




<h1>Condition Table</h1>
<table class="table table-hover text-center">
  <thead class="thead-dark">
    <tr>
      <th scope="col" class="text-center">Date</th>
      <th scope="col" class="text-center uniform-width">Sleep</th>
      <th scope="col" class="text-center uniform-width">Meal</th>
      <th scope="col" class="text-center uniform-width">Mental</th>
      <th scope="col" class="text-center uniform-width">Training</th>
      <th scope="col" class="text-center uniform-width">Condition</th>
      <th scope="col" class="text-center">Actions</th>
    </tr>
  </thead>
  <tbody>
    <% @daily_records.each do |record| %>
      <tr>
        <td><%= record.date %></td>
        <td><%= record.sleep %></td>
        <td><%= record.meal %></td>
        <td><%= record.mental %></td>
        <td><%= record.training %></td>
        <td><%= record.condition %></td>
        <td><%= link_to 'Edit', edit_daily_record_path(record) %></td>
      </tr>
    <% end %>
  </tbody>
</table>



<div class="filter-buttons">
  <%= button_tag "今日から1ヶ月", type: "button", class: "btn btn-primary", id: "filter-1-month" %>
  <%= button_tag "今日から3ヶ月", type: "button", class: "btn btn-primary", id: "filter-3-months" %>
  <%= button_tag "今日から半年", type: "button", class: "btn btn-primary", id: "filter-6-months" %>
</div>

<%= form_with url: daily_records_path, method: :get, local: true do |f| %>
  <div class="date-filter">
    <%= f.label :start_date, "Start Date" %>
    <%= f.date_field :start_date, value: params[:start_date], class: "form-control", id: "start-date" %>

    <%= f.label :end_date, "End Date" %>
    <%= f.date_field :end_date, value: params[:end_date], class: "form-control", id: "end-date" %>

    <%= f.submit "Filter", class: "btn btn-primary" %>
  </div>
<% end %>

<script>
  // 今日の日付を取得
  const today = new Date();
  const formatDate = (date) => date.toISOString().split("T")[0];

  // ボタンクリックイベント
  document.getElementById("filter-1-month").addEventListener("click", function() {
    document.getElementById("start-date").value = formatDate(new Date(today.getFullYear(), today.getMonth() - 1, today.getDate()));
    document.getElementById("end-date").value = formatDate(today);
  });

  document.getElementById("filter-3-months").addEventListener("click", function() {
    document.getElementById("start-date").value = formatDate(new Date(today.getFullYear(), today.getMonth() - 3, today.getDate()));
    document.getElementById("end-date").value = formatDate(today);
  });

  document.getElementById("filter-6-months").addEventListener("click", function() {
    document.getElementById("start-date").value = formatDate(new Date(today.getFullYear(), today.getMonth() - 6, today.getDate()));
    document.getElementById("end-date").value = formatDate(today);
  });
</script>
